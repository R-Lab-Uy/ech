ifelse(.data$partner > 0 & sum(.data$child, .data$parents_brosis, .data$grandchild, .data$child_law, .data$other_rel, .data$no_rel) == 0, "pareja",#Couple without children
ifelse(.data$partner == 0 & .data$child > 0  & .data$sex_householder == 1 & sum(.data$parents_brosis, .data$grandchild, .data$child_law, .data$other_rel, .data$no_rel) == 0,"monoparental", #Single parent or Single father
ifelse(.data$partner == 0 & .data$child > 0 & .data$sex_householder == 2 & sum(.data$parents_brosis, .data$grandchild, .data$child_law, .data$other_rel, .data$no_rel) == 0, "monomarental", #Single parent or Single mother
ifelse(.data$partner > 0 & .data$child > 0 & sum(.data$parents_brosis, .data$grandchild, .data$child_law, .data$other_rel, .data$no_rel) == 0, "biparental", #Couple with children
ifelse(.data$under_18 == 0 & (.data$parents_brosis > 0 | .data$grandchild > 0 | .data$child_law > 0 | .data$other_rel > 0) & .data$no_rel == 0, "extendido sin menores", #Extended without children
ifelse(.data$under_18 == 1 & (.data$parents_brosis > 0 | .data$grandchild > 0 | .data$child_law > 0 | .data$other_rel > 0) & .data$no_rel == 0, "extendido con menores", #Extended with children
ifelse(.data$no_rel > 0, "compuesto","error")))))))) # composite) %>%
)
data <- data %>% dplyr::select(everything(), -.data$sex_householder:-.data$no_rel)
names(data)[which(names(data) == "household_type")] <- colname
message(glue::glue("Se ha creado la variable {colname} en la base"))
data
}
toy_ech_2018 <- household_type(data = ech::toy_ech_2018)
household_type(data = ech::toy_ech_2018)
a <- household_type(data = ech::toy_ech_2018)
testthat::expect_true("tipo_hogar" %in% names(a))
testthat::expect_error(household_type(a))
testthat::expect_message(household_type(a))
a <- get_estimation_mean(variable = "pobre06", level = "h")
a <- get_estimation_total(variable = "pobre06", level = "h")
a <- get_estimation_mean(variable = "pobre06", domain = "dpto" == 1, level = "h")
a <- get_estimation_mean(variable = "pobre06", domain = "dpto == 1", level = "h")
domain <- "dpto == 1"
filter(data, domain)
filter(data, !!domain)
data %>% filter(domain)
data %>% filter({{ domain }})
data %>% filter(!! domain)
data %>% dplyr::filter(domain)
data %>% dplyr::filter(!!domain)
data %>% dplyr::filter({{ domain }})
data %>% dplyr::filter(!!as.name(domain))
var = stringr::str_split(domain, " ")
var = stringr::str_split(domain, " ")[1]
var = stringr::str_split(domain, " ")[[1]][1]
var = stringr::str_split(domain, " ", n = 3, simplify = T)[1]
val = stringr::str_split(domain, " ", n = 3, simplify = T)[3]
data %>% dplyr::filter(!!as.name(var) !!as.name(op))
!!as.name(op)
op = stringr::str_split(domain, " ", n = 3, simplify = T)[2]
!!as.name(op)
domain = .data$dpto == 1
data %>% filter (.data$dpto == 1)
data %>% filter (.dpto == 1)
data %>% filter (dpto == 1)
data %>% filter (data$dpto == 1)
data %>% filter (data$dpto == "MOntevideo")
data %>% filter (data$dpto == "Montevideo")
data$dpto==1
a <- get_estimation_mean(variable = "pobre06", domain = dpto == 1, level = "h")
a <- get_estimation_mean(variable = "pobre06", domain = data.dpto == 1, level = "h")
a <- get_estimation_mean(variable = "pobre06", domain = data$dpto == 1, level = "h")
variable = "pobre06"; domain = data$dpto == 1; level = "h"
filtro =  as.vector(data$dpto==1)
filtro <-  as.vector(data$dpto==1)
filtro <-  as.logical(data$dpto==1)
data = ech::toy_ech_2018
filtro <-  as.logical(data$dpto==1)
filtro <-  data$dpto==1
class(filtro)
data %>% dplyr::filter(filtro)
data %>% dplyr::filter(data$dpto == 1)
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
d = ech::toy_ech_2018
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(data = d, variable = "pobre06", domain = filtro, level = "h")
variable = "pobre06"; domain = d$dpto == 1, level = "h")
variable = "pobre06"; domain = d$dpto == 1; level = "h"
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
by.y = NULL
by.x = NULL
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
design_ech %>%
srvyr::filter(.data[[domain]])
design_ech %>%
srvyr::filter(domain)
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
library(ech)
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
get_estimation_mean()
get_estimation_mean
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
variable = "pobre06"; domain = d$dpto == 1; level = "h"
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
estimation <- design_ech %>%
srvyr::filter(domain)
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]])
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T)
by.x = "mes"
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T)
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
d = ech::toy_ech_2018
a <- get_estimation_mean(data = d, variable = "pobre06", level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
source('C:/Users/Usuario/Desktop/R/ech/R/get_estimation.R')
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
get_estimation_mean
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
data = d; variable = "pobre06"; by.x = "mes"; domain = d$dpto == 1; level = "h"
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
is.null(by.x) & is.null(by.y) & is.null(domain)
is.character(by.x) & is.null(by.y) & is.null(domain)
is.character(by.x) & is.character(by.y) & is.null(domain
)
is.null(by.x) & is.null(by.y) & is.character(domain)
is.character(by.x) & is.null(by.y) & is.character(domain)
is.character(by.x) & is.null(by.y) & is.logical(domain)
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
source('C:/Users/Usuario/Desktop/R/ech/R/get_estimation.R')
d = ech::toy_ech_2018
a <- get_estimation_mean(data = d, variable = "pobre06", level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 12)
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", level = "h")
expect_equal(nrow(a), 19)
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", level = "h")
expect_equal(nrow(a), 207)
d = ech::toy_ech_2018
a <- get_estimation_total(variable = "pobre06", level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_total(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_total(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 12)
a <- get_estimation_total(variable = "pobre06", by.x = "dpto", level = "h")
expect_equal(nrow(a), 19)
a <- get_estimation_total(variable = "pobre06", by.x = "dpto", by.y = "mes", level = "h")
expect_equal(nrow(a), 207)
ech_2018 <- employment(data = ech::toy_ech_2018, pobpcoac = "pobpcoac")
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", level = "i")
expect_equal(nrow(a), 1)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", domain = ech_2018$dpto == 1, level = "i")
expect_equal(nrow(a), 1)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", domain = ech_2018$dpto == 1, by.x = "mes", level = "i")
expect_equal(nrow(a), 12)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "dpto", level = "i")
expect_equal(nrow(a), 19)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "dpto", by.y = "mes",level = "i")
expect_equal(nrow(a), 207)
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", domain = d$e27 == 1, level = "h")
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", domain = d$e27 == 1, level = "i")
a <- get_estimation_mean(variable = "pobre06", by.x = "secc", by.y = "mes", domain = d$dpto == 1, level = "i")
a <- get_estimation_total(variable = "pobre06", by.x = "secc", by.y = "mes", domain = d$dpto == 1, level = "i")
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "secc", by.y = "mes", domain = d$dpto == 1,level = "i")
get_microdata(year = "2016", folder = tempdir(), toR = TRUE)
covr::codecov()
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "secc", by.y = "mes", domain = ech_2018$dpto == 1,level = "i")
covr::codecov()
