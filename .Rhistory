estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(data = d, variable = "pobre06", domain = filtro, level = "h")
variable = "pobre06"; domain = d$dpto == 1, level = "h")
variable = "pobre06"; domain = d$dpto == 1; level = "h"
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
by.y = NULL
by.x = NULL
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
design_ech %>%
srvyr::filter(.data[[domain]])
design_ech %>%
srvyr::filter(domain)
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
library(ech)
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
get_estimation_mean()
get_estimation_mean
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
variable = "pobre06"; domain = d$dpto == 1; level = "h"
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
estimation <- design_ech %>%
srvyr::filter(domain)
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]])
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T)
by.x = "mes"
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T)
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
d = ech::toy_ech_2018
a <- get_estimation_mean(data = d, variable = "pobre06", level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
source('C:/Users/Usuario/Desktop/R/ech/R/get_estimation.R')
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(.data[[domain]]) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
get_estimation_mean
get_estimation_mean <- function(data = ech::toy_ech_2018,
variable = NULL,
by.x = NULL,
by.y = NULL,
domain = NULL,
level = NULL){
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
# estimation ----
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
return(estimation)
}
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
data = d; variable = "pobre06"; by.x = "mes"; domain = d$dpto == 1; level = "h"
# checks ----
assertthat::assert_that(!is.null(data) | !is.null(variable), msg = "Debe indicar la variable")
assertthat::assert_that(all(variable %in% names(data)), msg = glue::glue("La variable {variable} no esta en {data}"))
if(!is.null(by.x)) assertthat::assert_that(by.x %in% names(data), msg = glue::glue("La variable {by.x} no esta en {data}"))
if(!is.null(by.y)) assertthat::assert_that(by.y %in% names(data), msg = glue::glue("La variable {by.y} no esta en {data}"))
# if(!is.null(domain)) assertthat::assert_that(domain %in% names(data), msg = glue::glue("La variable {domain} no esta en {data}"))
if(!is.null(level)) assertthat::assert_that(level %in% c("household", "h", "individual", "i"), msg = "Verifica el nivel seleccionado")
# design ----
design_ech <- ech::set_design(data = data, level = level)
# supressed warnings ---
options(survey.lonely.psu = "adjust")
options(dplyr.summarise.inform = FALSE)
if(is.null(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.character(by.y) & is.null(domain)){
estimation <- design_ech %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.null(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else if(is.character(by.x) & is.null(by.y) & is.character(domain)){
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
} else {
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], .data[[by.y]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
}
is.null(by.x) & is.null(by.y) & is.null(domain)
is.character(by.x) & is.null(by.y) & is.null(domain)
is.character(by.x) & is.character(by.y) & is.null(domain
)
is.null(by.x) & is.null(by.y) & is.character(domain)
is.character(by.x) & is.null(by.y) & is.character(domain)
is.character(by.x) & is.null(by.y) & is.logical(domain)
estimation <- design_ech %>%
srvyr::filter(domain) %>%
srvyr::group_by(.data[[by.x]], add = T) %>%
srvyr::summarise(colname = srvyr::survey_mean(.data[[variable]]))
source('C:/Users/Usuario/Desktop/R/ech/R/get_estimation.R')
d = ech::toy_ech_2018
a <- get_estimation_mean(data = d, variable = "pobre06", level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_mean(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_mean(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 12)
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", level = "h")
expect_equal(nrow(a), 19)
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", level = "h")
expect_equal(nrow(a), 207)
d = ech::toy_ech_2018
a <- get_estimation_total(variable = "pobre06", level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_total(data = d, variable = "pobre06", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 1)
a <- get_estimation_total(data = d, variable = "pobre06", by.x = "mes", domain = d$dpto == 1, level = "h")
expect_equal(nrow(a), 12)
a <- get_estimation_total(variable = "pobre06", by.x = "dpto", level = "h")
expect_equal(nrow(a), 19)
a <- get_estimation_total(variable = "pobre06", by.x = "dpto", by.y = "mes", level = "h")
expect_equal(nrow(a), 207)
ech_2018 <- employment(data = ech::toy_ech_2018, pobpcoac = "pobpcoac")
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", level = "i")
expect_equal(nrow(a), 1)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", domain = ech_2018$dpto == 1, level = "i")
expect_equal(nrow(a), 1)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", domain = ech_2018$dpto == 1, by.x = "mes", level = "i")
expect_equal(nrow(a), 12)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "dpto", level = "i")
expect_equal(nrow(a), 19)
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "dpto", by.y = "mes",level = "i")
expect_equal(nrow(a), 207)
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", domain = d$dpto == 1, level = "h")
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", domain = d$e27 == 1, level = "h")
a <- get_estimation_mean(variable = "pobre06", by.x = "dpto", by.y = "mes", domain = d$e27 == 1, level = "i")
a <- get_estimation_mean(variable = "pobre06", by.x = "secc", by.y = "mes", domain = d$dpto == 1, level = "i")
a <- get_estimation_total(variable = "pobre06", by.x = "secc", by.y = "mes", domain = d$dpto == 1, level = "i")
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "secc", by.y = "mes", domain = d$dpto == 1,level = "i")
get_microdata(year = "2016", folder = tempdir(), toR = TRUE)
covr::codecov()
a <- get_estimation_ratio(data = ech_2018, variable.x = "po", variable.y = "pea", by.x = "secc", by.y = "mes", domain = ech_2018$dpto == 1,level = "i")
covr::codecov()
ech_2018 <- employment(data = ech::toy_ech_2018, pobpcoac = "pobpcoac")
library(ech)
ech_2018 <- employment(data = ech::toy_ech_2018, pobpcoac = "pobpcoac")
ech$"dpto"
ech_2018$"dpto"
a <- "depto"
ech_2018$a
load("C:/Users/Usuario/Desktop/R/ech/data/dic.rda")
View(dic)
View(dic[,c(1:5, 17:18)])
View(dic[,c(1:3, 17:18)])
codcov
covr::codecov()
covr::codecov()
install.packages("pdftables")
install.packages("textclean")
utf8::output_ansi("Ñ")
utf8::output_ansi(x="Ñ")
utf8::as_utf8("%C3%91"
)
utf8::as_utf8("c391")
a <- utf8::as_utf8("c391")
folder = tempdir(); version = 4
u <- "http://www.ine.gub.uy/documents/10181/33330/CORRESPONDENCIA+CIUU4+A+CIUU3.pdf/623c43cb-009c-4da9-b48b-45282745063b"
f <- fs::path(folder, "ciiu4.pdf")
try(utils::download.file(u, f, mode = "wb", method = "libcurl"))
key <- rstudioapi::askForSecret()
key <- rstudioapi::askForSecret("676j3zojrqm4")
key <- rstudioapi::askForSecret(api_key)
key <- rstudioapi::askForSecret("api_key")
pdftables::convert_pdf(f, "ciiu4.csv",api_key = key)
df <- read.csv("ciiu4.csv")
df <- df[,-3]
names(df) <- c("ciuu_4","description", "ciuu_3")
df <- df[-1,]
View(df)
df[] <- lapply(df, replace_non_ascii)#ech::to_ascii)
df[] <- lapply(df, textclean::replace_non_ascii)#ech::to_ascii)
ciiu4 <- df
get_ipc <- function(folder = tempdir()){
u <- "http://www.ine.gub.uy/c/document_library/get_file?uuid=2e92084a-94ec-4fec-b5ca-42b40d5d2826&groupId=10181"
f <- fs::path(folder, "IPC gral var M_B10.xls")
try(utils::download.file(u, f, mode = "wb", method = "libcurl"))
df <- readxl::read_xls(f)
df <- df %>% dplyr::slice(7, 10:999)
names(df) <- df[1,]
df <- df[-1,]
df <- janitor::clean_names(df)
df <- df %>%
dplyr::mutate(fecha = janitor::excel_numeric_to_date(as.numeric(as.character(.data$mes_y_ano)), date_system = "modern"))
df <- df %>% dplyr::select(.data$fecha, dplyr::everything(), -.data$mes_y_ano)
ipc_base2010 <- df
}
get_ciiu <- function(folder = tempdir(), version = 4){
u <- "http://www.ine.gub.uy/documents/10181/33330/CORRESPONDENCIA+CIUU4+A+CIUU3.pdf/623c43cb-009c-4da9-b48b-45282745063b"
f <- fs::path(folder, "ciiu4.pdf")
try(utils::download.file(u, f, mode = "wb", method = "libcurl"))
key <- rstudioapi::askForSecret("api_key")
pdftables::convert_pdf(f, "ciiu4.csv",api_key = key)
df <- read.csv("ciiu4.csv")
df <- df[,-3]
names(df) <- c("ciuu_4","description", "ciuu_3")
df <- df[-1,]
df[] <- lapply(df, textclean::replace_non_ascii)#ech::to_ascii)
ciiu4 <- df
}
get_ciiu()
aa <- get_ciiu()
load("C:/Users/Usuario/Desktop/R/ech/data/ciiu4.rda")
load("C:/Users/Usuario/Desktop/R/ech/data/ciiu4.rda")
names(ciiu4) <- c("ciiu_4","description", "ciiu_3")
usethis::use_data(ciiu4)
usethis::use_data(ciiu4, overwrite = TRUE)
load("C:/Users/Usuario/Desktop/R/ech/data/ciiu4.rda")
load("C:/Users/Usuario/Desktop/R/ech/data/ciiu4.rda")
View(ciiu4)
get_ciiu <- function(folder = tempdir(), version = 4){
u <- "http://www.ine.gub.uy/documents/10181/33330/CORRESPONDENCIA+CIUU4+A+CIUU3.pdf/623c43cb-009c-4da9-b48b-45282745063b"
f <- fs::path(folder, "ciiu4.pdf")
try(utils::download.file(u, f, mode = "wb", method = "libcurl"))
key <- rstudioapi::askForSecret("api_key")
pdftables::convert_pdf(f, "ciiu4.csv",api_key = key)
df <- read.csv("ciiu4.csv")
df <- df[,-3]
names(df) <- c("ciiu_4","description", "ciiu_3")
df <- df[-1,]
df[] <- lapply(df, textclean::replace_non_ascii)#ech::to_ascii)
ciiu4 <- df
}
View(ciiu4)
ciiu4 <- get_ciiu()
save(ciiu4, file = "C:/Users/Usuario/Desktop/R/ech/data/ciiu4.rda")
covr::codecov()
